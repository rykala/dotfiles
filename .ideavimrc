"" Source your .vimrc
" source ~/.vimrc

let mapleader=" "
set relativenumber

" Plugins  --------------------------------
Plug "chrisbra/matchit"
Plug "dbakker/vim-paragraph-motion"
Plug "kana/vim-textobj-entire"
Plug "machakann/vim-highlightedyank"
Plug "michaeljsmith/vim-indent-object"
Plug "preservim/nerdtree"
Plug "terryma/vim-multiple-cursors"
Plug "tommcdo/vim-exchange"
Plug "tpope/vim-commentary"
Plug "tpope/vim-surround"
Plug "vim-scripts/argtextobj.vim"

" Quickscope ------------------------------
set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Matchit ---------------------------------
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±
" Feel free to pick your own mappings that are not affected. I like to use <leader>
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" Text objects ----------------------------
let g:argtextobj_pairs="[:],(:),{:},<:>"

" NERDTree --------------------------------
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

" <C-n> seems to me as a better solution than <M-n>,
" but we should finally support vim-visual-multi because vim-multiple-cursors is deprecated now
map <C-n> <Plug>NextWholeOccurrence

" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu

" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray

" My Mappings -----------------------------
map s <Action>(flash.search)

map <leader>d <Action>(Debug)
map <leader>r <Action>(RenameElement)
map <leader>c <Action>(Stop)
map <leader>z <Action>(ToggleDistractionFreeMode)

map <leader>ef <Action>(SelectInProjectView)
map <leader>tb <Action>(Annotate)
map <leader>th <Action>(Vcs.ShowTabbedFileHistory)
map <leader>hr <Action>(Vcs.Rollback)
map ]d <Action>(GotoNextError)
map [d <Action>(GotoPreviousError)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)

map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>o <Action>(FileStructurePopup)

map <leader>J Ji <ESC>

" Just makes me nervous
map H h

" Toggle case and start typing. E.g. `<leader>iget`: `property` -> `getProperty`
map <leader>i ~hi
" Remove selection and toggle case. E.g. `v2l<leader>u`: `getProperty` -> `property`
vmap <leader>u d~h

" I think it's a better solution
map U <C-R>

""" Which-key ------------------------------
set which-key

" Harpooner  ------------------------------
nmap <leader>1 <action>(HarpoonerOpenFile0)
nmap <leader>2 <action>(HarpoonerOpenFile1)
nmap <leader>3 <action>(HarpoonerOpenFile2)
nmap <leader>4 <action>(HarpoonerOpenFile3)
nmap <leader>5 <action>(HarpoonerOpenFile3)
nmap <leader>6 <action>(HarpoonerOpenFile3)

nmap <C-e> <action>(HarpoonerQuickMenu)
nmap <leader>a <action>(HarpoonerAddFile)

nmap <leader>hn <action>(HarpoonerNextFileAction)
nmap <leader>hp <action>(HarpoonerPreviousFileAction)
